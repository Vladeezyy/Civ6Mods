--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
-- INCLUDES
--==========================================================================================================================

--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
print("University of Sankore Rework Functions Loaded")
--==========================================================================================================================
-- Variables
--==========================================================================================================================

Leu_FollowersProperty		= "LEU_NUM_FOLLOWERS_MAJORITY_RELIGION_%d"
Leu_FollowersProperty_Max	= 127




--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
-- UTILITY FUNCTIONS
--==========================================================================================================================
-- UTILS
----------------------------------------------------------------------------------------------------------------------------
-- The following is stolen directly from Sukritact (who I think stole it from Stack Exchange)
-----------------------------------------
	-- NumberToBinaryTable
	-----------------------------------------
		function NumberToBinaryTable(iNum, iMax)

			assert(iNum >= 0, "number must be positive value")
			assert(iMax >= 0, "maximum must be positive value")

			iNum = math.floor(iNum) -- integers only!
			iNum = math.min(iNum, iMax)

			local iNumDigits = math.floor(math.log(iMax)/math.log(2)) + 1
			local tBinaryMap 	= {}
			for i = iNumDigits-1, 0, -1 do tBinaryMap[2^(i)] = 0 end
			local iCurPow		= 0
			---------------------------
			repeat
				local iBitNum	= iNum % 2
				iNum			= (iNum - iBitNum)/2

				tBinaryMap[2^(iCurPow)] = iBitNum
				iCurPow = iCurPow + 1
			until (iNum == 0)
			---------------------------
			return tBinaryMap
		end
	-----------------------------------------
	-- SetBinaryPropery
	-----------------------------------------
		function SetBinaryPropery(pObject, sPropertyTemplate, iNum, iMax)
			tBinaryMap = NumberToBinaryTable(iNum, iMax)

			for iBitVal, iBit in pairs(tBinaryMap) do
				local sProperty = string.format(sPropertyTemplate, iBitVal)
				--print(sProperty, iBit)
				pObject:SetProperty(sProperty, iBit)
			end
		end


--==========================================================================================================================
-- CORE FUNCTIONS
--==========================================================================================================================
---------------------------------------------------------
-- Burst on Trading Posts
---------------------------------------------------------
function OnCityReligionFollowersChanged(iPlayer, iCity)
	local pCity = CityManager.GetCity(iPlayer, iCity)
	if not pCity then return end
	local pPlot = pCity:GetPlot()
	--print("A city gained followers")

	local pCityReligion = pCity:GetReligion()
	if not pCityReligion then return end
	local iMajorityReligion = pCityReligion:GetMajorityReligion()
	if not iMajorityReligion then 
		--print("This city doesnt have a majority religion")
		SetBinaryPropery(pPlot, Leu_FollowersProperty, 0, Leu_FollowersProperty_Max)
		return 
	end

	local iNumFollowers = pCityReligion:GetNumFollowers(iMajorityReligion)
	
	--print("This city's majority religion has " .. iNumFollowers .. " followers")

	if iNumFollowers < 2 then 
		SetBinaryPropery(pPlot, Leu_FollowersProperty, 0, Leu_FollowersProperty_Max)
		return 
	end
	iNumFollowers = math.ceil(iNumFollowers/2)
	SetBinaryPropery(pPlot, Leu_FollowersProperty, iNumFollowers, Leu_FollowersProperty_Max)
end	

Events.CityReligionFollowersChanged.Add(OnCityReligionFollowersChanged)
Events.CityAddedToMap.Add(OnCityReligionFollowersChanged)

--==========================================================================================================================
--==========================================================================================================================