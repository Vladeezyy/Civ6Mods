--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
-- INCLUDES
--==========================================================================================================================

--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
print("Jebel Barkal Rework Gameplay Functions Loaded")
--==========================================================================================================================
-- Variables
--==========================================================================================================================

Leu_DomesticTradesProperty		= "LEU_NUM_DOMESTIC_TRADE_ROUTES_TO_THIS_CITY_%d"
Leu_DomesticTrades_Max			= 127

local iBuilding = "BUILDING_JEBEL_BARKAL"


--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
--<><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><><>
--==========================================================================================================================
--==========================================================================================================================
-- UTILITY FUNCTIONS
--==========================================================================================================================
-- UTILS
----------------------------------------------------------------------------------------------------------------------------
-- The following is stolen directly from Sukritact (who I think stole it from Stack Exchange)
-----------------------------------------
	-- NumberToBinaryTable
	-----------------------------------------
		function NumberToBinaryTable(iNum, iMax)

			assert(iNum >= 0, "number must be positive value")
			assert(iMax >= 0, "maximum must be positive value")

			iNum = math.floor(iNum) -- integers only!
			iNum = math.min(iNum, iMax)

			local iNumDigits = math.floor(math.log(iMax)/math.log(2)) + 1
			local tBinaryMap 	= {}
			for i = iNumDigits-1, 0, -1 do tBinaryMap[2^(i)] = 0 end
			local iCurPow		= 0
			---------------------------
			repeat
				local iBitNum	= iNum % 2
				iNum			= (iNum - iBitNum)/2

				tBinaryMap[2^(iCurPow)] = iBitNum
				iCurPow = iCurPow + 1
			until (iNum == 0)
			---------------------------
			return tBinaryMap
		end
	-----------------------------------------
	-- SetBinaryPropery
	-----------------------------------------
		function SetBinaryPropery(pObject, sPropertyTemplate, iNum, iMax)
			tBinaryMap = NumberToBinaryTable(iNum, iMax)

			for iBitVal, iBit in pairs(tBinaryMap) do
				local sProperty = string.format(sPropertyTemplate, iBitVal)
				--print(sProperty, iBit)
				pObject:SetProperty(sProperty, iBit)
			end
		end


--==========================================================================================================================
-- CORE FUNCTIONS
--==========================================================================================================================

function Leu_CheckJebelBarkalDomesticRoutes(playerID, params)
	---- PARAMETERS:
	---- parameters.playerID = playerID;
	---- parameters.Leu_CityX = iCityX;
	---- parameters.Leu_CityY = iCityY;
	---- parameters.Leu_NumDomesticRoutes = numJebelBarkers
	local pPlayer = Players[params.playerID]
	print("Setting the Jebel Barkal Trade property")
	local pPlot = Map.GetPlot(params.Leu_CityX, params.Leu_CityY);
	local nDomesticRoutes = params.Leu_NumDomesticRoutes
	pPlot:SetProperty("LeuJebelBarkal_NumDomestics", nDomesticRoutes ) 
	

	if nDomesticRoutes < 1 then 
		SetBinaryPropery(pPlot, Leu_DomesticTradesProperty, 0, Leu_DomesticTrades_Max)
		return
	end
	SetBinaryPropery(pPlot, Leu_DomesticTradesProperty, nDomesticRoutes, Leu_DomesticTrades_Max)
end

GameEvents.Leu_CheckJebelBarkalDomesticRoutes.Add(Leu_CheckJebelBarkalDomesticRoutes)



function Leu_OnJebelBarkalCompleted( locX, locY, buildingIndex, playerIndex, cityId, iPercentComplete, pillaged)

	if (GameInfo.Buildings[buildingIndex].RequiresPlacement and iPercentComplete == 100) then
		local currentBuildingType :string = GameInfo.Buildings[buildingIndex].BuildingType;
		if currentBuildingType == iBuilding then			
			print("Jebel Barkal was built this turn")
			local pCity	 = CityManager.GetCity(playerIndex, cityId);
			local iCityX = pCity:GetX();
			local iCityY = pCity:GetY();
			local pPlot = Map.GetPlot(iCityX, iCityY);
			pPlot:SetProperty( "LeuHasJebelBarkal", 1 ) 
		end
	end
end

Events.WonderCompleted.Add(Leu_OnJebelBarkalCompleted)




--==========================================================================================================================
--==========================================================================================================================